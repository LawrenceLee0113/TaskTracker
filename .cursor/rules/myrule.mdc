---
description: 
globs: 
alwaysApply: true
---
# TaskTracker 任務追蹤系統 - Cursor Rules
# ASP.NET MVC + Tailwind CSS + SQLite 期末報告專案

## 📋 專案文件優先級規則

### 🔴 執行任務前必讀文件
在執行任何與 TaskTracker 專案相關的任務前，**必須先閱讀並參考以下文件：**

1. **專案企劃書.md** - 主要企劃文件
   - 專案概覽與技術架構
   - 資料庫設計與關聯結構 ⭐
   - 系統功能規格 (重點：CRUD 功能)
   - UI 設計需求 (Tailwind CSS)

2. **開發階段規劃.md** - 詳細開發計劃
   - 6 階段開發流程 (Phase 1-6)
   - CRUD 功能檢查清單 ⭐⭐⭐
   - 關聯查詢實作要點
   - 進度追蹤與驗證標準

### 🎯 專案核心要求
本專案為期末報告，**重點展示以下功能：**
- **CRUD 操作** ⭐⭐⭐ (Create, Read, Update, Delete)
- **資料庫關聯** ⭐⭐ (一對多、多對一關聯)
- **Entity Framework Core** 實作
- **ASP.NET MVC 架構** 完整展現

---

## 🛠️ 開發指導原則

### 技術棧限制
- **後端：** ASP.NET Core MVC (統一前後端)
- **資料庫：** SQLite + Entity Framework Core
- **前端：** Razor Views + Tailwind CSS
- **架構：** 嚴格遵循 MVC 模式

### 資料表結構 ⭐
- **Projects** (專案表) - 主要實體
- **Users** (使用者表) - 負責人實體  
- **Tasks** (任務表) - 核心關聯實體
- **關聯：** Project 1:N Tasks, User 1:N Tasks

### CRUD 實作要求 ⭐⭐⭐
每個 Controller 必須包含：
- **Index** (列表頁) - Read 操作
- **Details** (詳情頁) - Read + 關聯查詢 ⭐
- **Create** (新增) - Create 操作 ⭐
- **Edit** (編輯) - Update 操作 ⭐
- **Delete** (刪除) - Delete 操作 ⭐

### 關聯查詢展示 ⭐
- 專案詳情頁顯示所屬任務
- 使用者詳情頁顯示負責任務
- 任務表單包含專案/使用者選擇
- 使用 Include() 正確載入關聯資料

---

## 🧑‍💻 專業工程師開發規範

### 後端工程師職責
- **Entity Framework 模型設計：** 正確設定實體關聯和導航屬性
- **Controller 架構：** 實作完整的 CRUD 操作，確保每個動作都有適當的錯誤處理
- **資料驗證：** 使用 DataAnnotations 進行模型驗證，處理業務邏輯
- **關聯查詢：** 使用 Include() 和 ThenInclude() 正確載入相關資料
- **依賴注入：** 正確設定 DbContext 和服務註冊

### 前端工程師職責
- **Tailwind CSS 實作：** 建立響應式、現代化的使用者介面
- **Razor Views 開發：** 建立語義化的 HTML 結構，正確使用 Model 綁定
- **表單設計：** 實作完整的表單驗證和錯誤顯示機制
- **組件化思維：** 建立可重用的部分檢視，保持程式碼 DRY 原則
- **用戶體驗：** 確保 CRUD 操作流程直觀易用，提供適當的反饋訊息

### 程式碼品質要求
- **資料註解：** 每個 Model 必須有適當的驗證屬性
- **導航屬性：** 正確設定 Entity 關聯，避免循環參考
- **錯誤處理：** 實作完善的異常處理和用戶友善的錯誤訊息
- **命名規範：** 使用清晰、語義化的命名方式
- **注釋文件：** 為複雜的業務邏輯提供適當註解

---

## 🎨 UI/UX 設計原則

### Tailwind CSS 使用規範
- **響應式設計：** 確保在所有裝置上都有良好的使用體驗
- **組件化設計：** 建立一致的設計系統和可重用組件
- **可訪問性：** 遵循 WCAG 指南，確保無障礙訪問
- **效能優化：** 只載入需要的 CSS，避免樣式衝突

### 重點展示區域 ⭐
- **CRUD 按鈕明顯標示** - 使用一致的配色和圖示
- **關聯資料清楚顯示** - 表格、卡片等組件要突出關聯關係
- **即時反饋** - 成功/錯誤訊息要即時顯示且位置明顯
- **表單驗證** - 錯誤訊息要清晰且具體

---

## ✅ 開發檢查清單

### 每次提交前必檢查
- [ ] 對照企劃書確認功能符合需求
- [ ] 檢查開發階段規劃的進度更新
- [ ] 確認 CRUD 功能正常運作 ⭐
- [ ] 驗證資料庫關聯查詢正確 ⭐
- [ ] 測試 Tailwind CSS 樣式載入
- [ ] 檢查程式碼註解和文件更新

### 階段完成驗證
- [ ] 更新開發階段規劃進度表
- [ ] 標記完成的 CRUD 功能 ⭐
- [ ] 截圖記錄功能展示
- [ ] 準備期末報告相關素材

---

## 🚨 特別注意事項

### 期末報告重點
- **CRUD 展示** 是評分重點，每個功能都要完整可用 ⭐⭐⭐
- **資料庫關聯** 設計要清楚展現多表關聯 ⭐⭐
- **程式碼結構** 要清晰，便於老師檢閱
- **功能演示** 要流暢，準備測試資料

### 避免事項
- ❌ 不要偏離企劃書的技術架構
- ❌ 不要忽略 CRUD 功能的完整性
- ❌ 不要混用多種 CSS 框架
- ❌ 不要過度複雜化，保持簡潔實用

---

## 📞 文件參考指令

執行任何任務前，請先執行：
```bash
# 檢視專案企劃書
cat "專案企劃書.md"

# 檢視開發階段規劃
cat "開發階段規劃.md"

# 確認當前開發階段和待辦事項
grep -n "⏳\|✅" "開發階段規劃.md"
```

---

**重要提醒：** 本專案為期末報告，所有開發決策都應以展示 CRUD 功能和資料庫關聯為優先考量。在不確定任何實作細節時，請先參考上述兩份文件，確保符合專案目標和技術要求。

**最後更新：** 2024年12月  
**適用版本：** TaskTracker v1.0 